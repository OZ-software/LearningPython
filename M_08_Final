print('Задача 1. Космическая еда')
print ()

#Ваш космический корабль потерпел крушение на пустынной планете.
# Еда здесь не растёт, но вы спасли из обломков 100-килограммовый мешок гречки.
# Из прошлого опыта вы знаете,
# что если будете экономно питаться, то у вас будет уходить по 4 килограмма гречки в месяц.
# 
# Чтобы прикинуть гречневый бюджет,
# вы решили написать программу, которая выведет информацию
# о том сколько килограммов гречки у вас должно быть в запасе через месяц, два и так далее,
# пока она не закончится.
# Используйте цикл for.


buckwheat = 96   # Есть смысл сразу писать на 4 кг меньше, так как по факту мы знаем, что сейчас у нас 100 кг еды
month = 0

for num in range (buckwheat, -1, -4):
  month += 1
  if month == 1:      # В принципе эти проверки можно не делать, но так красивее для вывода
    print(f'Через {month} месяц у вас останется {num} кг. гречки')
  elif 1 < month < 5:
    print(f'Через {month} месяца у вас останется {num} кг. гречки')
  else:
    print(f'Через {month} месяцев у вас останется {num} кг. гречки')

print()
print(f'Человек без еды может прожить максимум месяц, поэтому на {month + 1} месяц вы умрете. Всего доброго.')
  
 # ---------------
 print('Задача 2. Долги')
print()
# МирПрогБанк наконец-то разделил законопослушных граждан и должников и поместил их в разные базы.
# Но банк не торопится как-то слишком сильно давить на возврат денег.
# Сейчас операторам банка дали задание
# позвонить каждому пятому должнику из списка (они нумеруются с нуля) и спросить,
# сколько примерно денег каждый из них задолжал банку.
# 
# Напишите программу,
# которая принимает на вход количество должников,
# затем спрашивает у каждого пятого (начиная с 0) его долг.
# В конце выводится общая сумма долгов.

# Пример:
# 
# Введите количество должников: 13
# Должник с номером 0
# Сколько должны? 1000
# Должник с номером 5
# Сколько должны? 5000
# Должник с номером 10
# Сколько должны? 2000
# Общая сумма долга: 8000

debtors = int(input('Введите количество должников: '))
debtors_sum = 0

for num in range (0, debtors + 1, 5):
  debtors_sum += int(input(f'Должник № {num}, сколько рублей должен? '))
print()

print(f'Общая сумма долгов равна {debtors_sum} р.')

print()
 
 # ---------------
 
 print('Задача 3. Таймер для микроволновых печей')

# Мы разрабатываем микропрограмму — таймер обратного отсчета для микроволновых печей.

# Есть задача убрать звук по готовности и заменить его сообщением на LED-экране.
# В нашем случае будем выводить в консоль сообщение с обратным отсчетом в секундах от “reverse_timer” до момента готовности, то есть «0» секунд, и спрашивать пользователя, готов ли он забрать еду.

# Пользователь в любой момент может прервать режим разогрева, введя «1» (то есть ответить «Да, еда готова»), тогда программа выводит на экран сообщение «Ваша еда готова, можете забрать» и показывает, на какой секунде был прерван таймер.
# Если пользователь отвечает «0», что равноценно «Нет», то таймер уменьшается. Когда он достигнет «0» секунд, выводим сообщение «Ваша еда готова, осторожно горячo!»

# В данном задании используем цикл for.
# “reverse_timer” – переменная счетчик, которую запрашиваем у пользователя через функцию ввода input.

print()
reverse_timer = int(input('Введите время разогрева в секундах: '))
microstop = False

for num in range (reverse_timer, 0, -1):
  print (num, 'сек.')
  microstop = int(input('Еда готова? - 1. Продолжить разогрев? - 0: '))
  if microstop:
    break
    
print() 
print('Ваша еда готова, осторожно горячо!')

print()
 
 # ---------------
 
 print('Задача 4. Отрезок')

#Напишите программу, 
# которая считывает с клавиатуры три числа a, b и c,
# считает и выводит на консоль среднее арифметическое
# всех чисел из отрезка [a; b], которые кратны числу c.
# Подсказка: (a и b  являются промежутком, а c для проверки кратности).

print()
num_a = int(input('Введите число a: '))
num_b = int(input('Введите число b: '))
num_c = int(input('Введите число c: '))
summ = 0
iterator = 0
first_step = 0
flag = False

for num in range (num_a, num_b+1):      # Для начала мы найдем первое число, которое кратно числу "с" и запомним его
  if num % num_c == 0:
    first_step = num
    print (f'Первое число, кратное {num_c} равно = {first_step}', )
    flag = True
    break
if flag:
  for num in range (first_step, num_b + 1, num_c):      # Будем проходить только по числам кратным "c" - это значительно ускорит работу программы
    summ += num
    iterator += 1
    print (num, summ, iterator)
  print()
  summ /= iterator                     # высчитываем среднее арифметическое
  print('Среднее арифметическое будет равно', {summ})
else:
  print()
  print(f'Чисел кратных {num_c} нет в заданном промежутке')

print()
 
 # ---------------
 # ---------------
 # ---------------
 # ---------------
 # ---------------
 # ---------------
 # ---------------
 
