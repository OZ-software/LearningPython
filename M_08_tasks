#------ task 02_01
print('Задача 1. Таблица кубов')

#Паше для проекта по математике нужна таблица кубов (третья степень числа) только чётных чисел от 1 до N. Напишите программу, которая выведет ему эту таблицу на экран. Не используйте условные операторы, выведите формулу, как мы сделали это в уроке.

print()

counter = int(input('Введите верхнее число диапазона для рассчета кубов четных чисел: '))

for num in range (1, counter // 2 + 1):
  num *= 2
  print(f'Куб числа {num} равен {num ** 3}')


print()

#------ task 02_02

print("Задача 2. Деление клетки")

# В одной лаборатории наблюдают за одноклеточной амёбой. Мы знаем, что каждые три часа она делится на 2 клетки. Нам нужно для этой лаборатории написать программу, которая будет выводить сколько прошло часов и сколько получилось клеток. Также нас попросили писать на каждом этапе деления сколько осталось часов до завершения наблюдения, чтобы ученым было проще формулировать выводы на определённом этапе наблюдения.

cells = 1
hour_count = int(input('Введите количество часов для наблюдения: '))
print()

for hour in range (1, hour_count // 3 + 1):
  print(f'Прошло времени - {hour * 3} ч.')
  cells *= 2
  print(f'Количество клеток - {cells}')
  print(f'Осталось часов - {hour_count - hour * 3} ч.')
  print()

print ('Конец наблюдения')

#------ task 02_03

print('Задача 3. Квадраты нечётных чисел')

print ()

# Вводится число N. Напишите программу, которая выводит квадраты нечетных чисел от 1 до N. Нельзя использовать условные операторы. Можно использовать цикл while, но постарайтесь всё-таки решить с помощью конструкции for in range. Не нужно искать решение в интернете, попробуйте подумать сами, в следующем уроке мы обязательно разберём эту задачу.
print()
N = int(input('Введите число верхнего диапазона: '))

odd_count =  (N - (N // 2) + 1)       # Высчитываем сколько нам нужно сделать проходов для высчета всех нечетных числе в диапазоне

for num in range (1, odd_count):
  print()
  odd = 2 * num - 1                  # получаем это нечетное число.
  print (f'Квадрат числа {odd} равен {odd ** 2}')

print ()

#------ task 03_01

print('Задача 1. Степень нечётного числа')

#Выведите третью степень каждого нечётного числа в диапазоне от единицы до указанного пользователем числа включительно. Для этого используйте шаг внутри функции range.
print()
N = int(input('Введите число верхнего диапазона: '))

for num in range (1, N+1, 2):
  degr = num ** 3
  print(num, '** 3 = ', degr)


#------ task 03_02

print ('Задача 2. Театр')

# Напишите программу для вычисления суммы каждого пятого числа, лежащего в диапазоне от единицы до N. Использовать условный оператор нельзя.

print()
N = int(input('Введите число верхнего диапазона: '))
sum = 0
for num in range (1, N+1, 5):
  sum += num
print('Сумма каждого пятого числа в дипазоне равна ', sum)

#------ task 03_03

#Задача 3. Диета

# Саша просыпается когда угодно, но в 23 часа уже точно идёт спать. Питается Саша следующим образом: каждые 3 часа он выпивает литр воды и съедает N калорий. Пить и есть он, кстати, начинает сразу как только проснётся. Напишите программу, которая считает сколько он выпьет литров воды и сколько калорий он съест перед тем как пойдёт спать.

upcom = int(input('Во сколько часов проснулся Саша: '))
water = 0
kalories = 0
for hour in range (upcom, 23, 3):
  print (hour, 'ч.')
  water += 3
  kalories += int(input('На сколько калорий скушал Саша: '))
  print()

print(f'До того как заснуть Саша выпил {water} л. воды и съел {kalories} к.')

#------ task_04_01

print('Задача 1. Прятки')

#Наверное, все мы в детстве играли в прятки. И конечно же всегда был “голя” - тот, кто всех ищет. И пока все прячутся, он с закрытыми глазами ведёт обратный отсчёт секунд.

#Напишите программу, которая получает на вход количество секунд N и выводит все числа от N до 1 в порядке убывания. В конце выведите сообщение “Я иду искать!”

second_count = int(input('Введите количество секунд: '))

for num in range (second_count, 0, -1):
  print(num)
print('Я иду искать!')

#------ task_04_02

print ('Задача 2. Армия')
print()

#У офицера сегодня очень плохое настроение: он выстроил всех солдат в шеренгу и, начиная с конца, начал спрашивать у каждого четвёртого солдата сколько правил прописано в воинском уставе. Количество правил с каждым разом меняется. Если солдат ответил неверно, то применяется закон под названием “упал-отжался”. Количество отжиманий считается как 10 умножить на порядковый номер солдата в шеренге. Напишите программу, которая посчитает сколько в сумме получится таких отжиманий.

#Усложнение: напишите программу так, чтобы офицер начинал спрашивать не с последнего солдата в шеренге, а с четвертого с конца. Если солдат в шеренге слишком мало, офицер не спрашивает никого

rules_origin = 23      # Сколько всего правил в уставе
sum_pushups = 0         # Суммарное количество отжиманий
count_soldiers = int(input('Количество солдат в шеренге: '))
count_soldiers -= 3

if count_soldiers <= 0:
  print ('Так как солдат меньше четырёх. Опроса не будет!')
else:
  for num in range (count_soldiers, 0 , -4):
    rules_soldier = int(input('Рядовой! Сколько правил в уставе? '))
    if rules_soldier != rules_origin:
      pushups = num * 10
      sum_pushups += pushups
      print('Рядовой,', pushups, 'отжиманий')
      print()
    else:
      print()
      print('Молодец! Разойтись!')
      break
  print()    
  print(sum_pushups, 'отжиманий было сделано в процессе опроса')

#------ task_04_03

print ('Задача 3. Прятки 2')
#П ока все прятались, “голя” решил схитрить и считать секунды быстрее, чем нужно.

# Напишите программу, которая выводит только чётные числа в порядке убывания от N до 1 включительно, используя цикл for. Нельзя использовать условный оператор.
print()
second_count = int(input('Введите количество секунд: ')) // 2

print(second_count)


for num in range (second_count * 2, 0, -2):
  print(num)
print('Я иду искать!')

#------
#------
#------
#------
#------
#------
#------
#------
#------


